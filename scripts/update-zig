#!/usr/bin/env bash
# SPDX-License-Identifier: 0BSD

# Define ZIGDIR and ZIGEXE variables if not already defined.
[ -z "${ZIGDIR}" ] && ZIGDIR="${HOME}/.local/zig"
[ -z "${ZIGEXE}" ] && ZIGEXE="${ZIGDIR}/zig"

# Get the url of the latest available Zig download.
url () {
    local arch=$(uname -m)
    local url=$(
        curl 'https://ziglang.org/download/index.json' --no-progress-meter \
        | jq -r '.master."'"${arch}"'-linux".tarball'
    )
    [ "${url}" == 'null' ] && {
        printf '%s\n' "unable to retrieve url for ${arch}" >&2
        exit 1
    }
    printf '%s\n' "${url}"
}

# Check whether we actually need to update. If not, exit with error code 1.
query () {
    # Invoke 'zig version' to retrieve current version. Failure implies Zig is
    # not installed, which is ok, we handle first time installs too.
    local oldver=$("${ZIGEXE}" version 2>/dev/null || printf '[not installed]')
    local newver=$(latest "${1}")

    # We already have the latest version of Zig. Nothing more needs to be done.
    [ -z "${F}" ] && [ "${oldver}" == "${newver}" ] && exit

    # Print update path that will be taken if script is invoked normally.
    printf '%s -> %s\n' "${oldver}" "${newver}"
}

# Extract the latest version from the tarball's file name.
latest () {
    sed 's/^.\+'"$(uname -m)"'-\(.\+\)\.tar\.xz$/\1/' <<<"${1}"
}

# Download and install the new version.
install () {
    # Ensure Zig directory exists and clear out any existing installation.
    mkdir -p "${ZIGDIR}" || exit
    find "${ZIGDIR}" -mindepth 1 -delete || exit

    # Download the new version, stripping out the root folder as we don't need it.
    printf 'Downloading %s\n' "${1}" >&2
    curl "${1}" | tar --directory "${ZIGDIR}" --strip-components 1 -Jx
}

F= && [[ "${1}" == 'force' ]] && F='force' && shift
case "${1}" in
    'url') url ;;
    'query') query "$(url)" ;;
    'latest') latest "$(url)" ;;
    '') url=$(url)
        query "${url}" >/dev/null
        install "${url}" ;;
    *) printf "unknown argument: %s\n" "${1}" >&2 && exit 1 ;;
esac
